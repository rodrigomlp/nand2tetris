// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in= true ,sel=address ,a= w1 ,b=w2 ,c=w3 ,d=w4 ,e=w5 ,f=w6 ,g=w7 ,h=w8 );
   
    
    And(a=w1,b=load ,out=w9 ); 
    And(a=w2 ,b=load ,out=w10 ); 
    And(a=w3 ,b=load ,out=w11 ); 
    And(a=w4 ,b=load ,out=w12 ); 
    And(a=w5 ,b=load ,out=w13 ); 
    And(a=w6 ,b=load ,out=w14 ); 
    And(a=w7 ,b=load ,out=w15 ); 
    And(a=w8 ,b=load ,out=w16 ); 

    Register(in=in ,load=w9 ,out=w17);
    Register(in=in ,load=w10 ,out=w18);
    Register(in=in ,load=w11 ,out=w19);
    Register(in=in ,load=w12 ,out=w20 );
    Register(in=in ,load=w13 ,out=w21 );
    Register(in=in ,load=w14 ,out=w22 );
    Register(in=in ,load=w15 ,out=w23 );
    Register(in=in ,load=w16 ,out=w24 );

    Mux8Way16(a=w17 ,b=w18 ,c=w19 ,d=w20 ,e=w21 ,f=w22 ,g=w23 ,h=w24 ,sel=address ,out=out );

    
    
}