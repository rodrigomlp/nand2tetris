// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=true ,sel=address[12..13] ,a=w1 ,b=w2 ,c=w3 ,d=w4 ); 

    And(a=w1,b=load ,out=w5 ); 
    And(a=w2 ,b=load ,out=w6 ); 
    And(a=w3 ,b=load ,out=w7 ); 
    And(a=w4 ,b=load ,out=w8 );


    RAM4K(in=in ,load=w5 ,address=address[0..11] ,out=w9 );
    RAM4K(in=in ,load=w6 ,address=address[0..11] ,out=w10 );
    RAM4K(in=in ,load=w7 ,address=address[0..11] ,out=w11 );
    RAM4K(in=in ,load=w8 ,address=address[0..11] ,out=w12 );

    Mux4Way16(a=w9 ,b=w10 ,c=w11 ,d=w12 ,sel=address[12..13] ,out=out );
}